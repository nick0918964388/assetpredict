{
  "unpublishedPage": {
    "name": "Predict",
    "slug": "predict",
    "layouts": [
      {
        "viewMode": false,
        "dsl": {
          "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
          "widgetName": "MainContainer",
          "backgroundColor": "none",
          "rightColumn": 1224,
          "snapColumns": 64,
          "detachFromLayout": true,
          "widgetId": "0",
          "topRow": 0,
          "bottomRow": 800,
          "containerStyle": "none",
          "snapRows": 95,
          "parentRowSpace": 1,
          "type": "CANVAS_WIDGET",
          "canExtend": true,
          "version": 89,
          "minHeight": 970,
          "parentColumnSpace": 1,
          "dynamicTriggerPathList": [],
          "dynamicBindingPathList": [
            {
              "key": "borderRadius"
            },
            {
              "key": "boxShadow"
            }
          ],
          "leftColumn": 0,
          "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}"
        },
        "layoutOnLoadActions": [
          [
            {
              "id": "Predict_getLowHealthTypeList",
              "name": "getLowHealthTypeList",
              "confirmBeforeExecute": false,
              "pluginType": "DB",
              "jsonPathKeys": [],
              "timeoutInMillisecond": 10000
            }
          ],
          [
            {
              "id": "Predict_utils1.getLowHealth",
              "name": "utils1.getLowHealth",
              "collectionId": "Predict_utils1",
              "confirmBeforeExecute": false,
              "pluginType": "JS",
              "jsonPathKeys": [
                "async () => {\n  const assetLowHealths = sel_productStockFilter.value ? await getLowHealthByType.run() : await getLowHealth.run();\n  let filteredLowHealths = assetLowHealths;\n  return filteredLowHealths.map(p => ({\n    Assetnum: p.assetnum,\n    Type: p.type,\n    Site: p.siteid,\n    HealthScore: p.healthScore,\n    Predictedfailuredate: p.predictedfailuredate,\n    Installdate: p.installdate,\n    Age: p.age,\n    TotalCost: p.totalcost\n  }));\n}"
              ],
              "timeoutInMillisecond": 10000
            }
          ]
        ],
        "layoutOnLoadActionErrors": [],
        "validOnPageLoadActions": true,
        "id": "Predict",
        "deleted": false,
        "policies": [],
        "userPermissions": []
      }
    ],
    "userPermissions": [],
    "policies": [],
    "isHidden": false
  },
  "deleted": false,
  "gitSyncId": "665d9fbe7fb8a648463c2254_f3ac2357-3f94-449d-aa7d-1b4202ffa2ea"
}